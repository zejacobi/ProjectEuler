"""PROBLEM 12
The sequence of triangle numbers is generated by adding the natural numbers.
So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
"""

import math

current_num = 1
current_triangle = 1
current_divisors = [1]

while len(current_divisors) <= 250:  # I'm deliberately finding only half the divisors. Divisors
    # always come in pairs, so the number of divisors will always be even.
    current_num += 1
    current_triangle += current_num

    current_divisors = [i for i in range(1, int(math.ceil(math.sqrt(current_triangle))))
                        if not current_triangle % i]

print(current_triangle)
